const date=new Date,currentYear=date.getFullYear(),yearsRange=[];for(let e=2011;e<=currentYear;e+=1)yearsRange.push(e.toString());const generateOptions=e=>e.map((e=>{const t=document.createElement("option");return t.value=e,t.textContent=e,t})),generateFromTo=(e,t)=>[generateOptions(yearsRange),generateOptions(yearsRange.filter((t=>t>=e)))];window.addEventListener("elementor/init",(()=>{const e=elementor.modules.controls.BaseMultiple.extend({onReady(){const e=this,t=`.${my_elementor_obj.control_uid.replace("default-{{{ data._cid }}}",`from-${this.model.cid}`)}`,a=`.${my_elementor_obj.control_uid.replace("default-{{{ data._cid }}}",`to-${this.model.cid}`)}`;this.initialValue=this.options.elementSettingsModel.attributes[this.model.attributes.name],this.initialValue.from>this.initialValue.to&&(this.initialValue.to=this.initialValue.from),this.newValue=this.initialValue,waitForElement([t,a]).then((()=>{let[n,o]=generateFromTo(e.initialValue.from,e.initialValue.to);const l=jQuery(t),i=jQuery(a);l.append(...n),l.val(e.initialValue.from),i.append(...o),i.val(e.initialValue.to);const r=r=>{const{target:u}=r;u.className.includes("from")?(e.newValue.from=u.value,u.value>e.newValue.to&&(e.newValue.to=e.newValue.from)):e.newValue.to=u.value,[n,o]=generateFromTo(e.newValue.from,e.newValue.to),jQuery(`${t} option`).remove(),jQuery(`${a} option`).remove(),l.append(...n),l.val(e.newValue.from),i.append(...o),i.val(e.newValue.to),e.saveValue()};l.on("change",r),i.on("change",r)}))},saveValue(){this.setValue(this.newValue)}});elementor.addControlView("years-range",e)}));